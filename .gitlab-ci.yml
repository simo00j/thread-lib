stages:
  - docker
  - build
  - test
  - deploy

variables:
  TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# Build the Docker image with CMake etc
docker:
  stage: docker
  image: docker:19.03
  services:
    - docker:dind
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  tags:
    - docker
  script:
    - docker pull $RELEASE_IMAGE || true
    - >
      docker build
      --pull
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $RELEASE_IMAGE
      --tag $TEST_IMAGE
      -f $CI_PROJECT_DIR/build.Dockerfile
      .
    - docker push $TEST_IMAGE

.make:
  image: $TEST_IMAGE
  artifacts:
    paths:
      - /tmp/$USER-*

# Generate the test binaries
build:
  stage: build
  extends: .make
  script:
    - mkdir cmake-build-debug
    - cmake -B cmake-build-debug -DCMAKE_BUILD_TYPE=Debug
    - make -s -C cmake-build-debug -j install
  artifacts:
    paths:
      - install/

build release:
  stage: build
  extends: .make
  script:
    - mkdir cmake-build-release
    - cmake -B cmake-build-release -DCMAKE_BUILD_TYPE=Release
    - make -s -C cmake-build-release -j install
  artifacts:
    paths:
      - install/

# Run thread tests
test-thread:
  stage: test
  extends: .make
  dependencies:
    - build
  parallel:
    matrix:
      - TEST: [ 01-main, 02-switch, 11-join, 12-join-main, 21-create-many, 22-create-many-recursive, 23-create-many-once, 31-switch-many, 32-switch-many-join, 33-switch-many-cascade, 51-fibonacci ]
  script:
    - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:install/lib" valgrind install/bin/$TEST --leak-check=full --show-reachable=yes --track-origins=yes

# Run thread tests
test-mutex:
  stage: test
  extends: .make
  dependencies:
    - build
  parallel:
    matrix:
      - TEST: [ 61-mutex, 62-mutex ]
  script:
    - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:install/lib" valgrind install/bin/$TEST --leak-check=full --show-reachable=yes --track-origins=yes
  allow_failure: true

# Send the changelog to the Telegram group
telegram:
  stage: deploy
  image: registry.gitlab.com/clovis-ai/dotfiles:latest
  needs: [ ]
  script:
    - git changelog --format telegram-html --incoming >changelog
    - announce-telegram changelog "$CHAT_IDS"
  only:
    - master

# Publish the container so it can be reused by future jobs
docker-latest:
  extends: docker
  variables:
    GIT_STRATEGY: none
  stage: deploy
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - master
